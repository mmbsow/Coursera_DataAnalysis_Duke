xbar <- mean(boot_means)
sder <- sd(boot_means)
xbar + c(-1,1) * qnorm(0.95) * sder
qnorm(.95)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.9, est = "mean",
boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.9, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
class(nc$habit)
nc$habit
boxplot(nc$habit ~ nc$gained)
boxplot(nc$gained ~ nc$habit)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, median)
by(nc$weight, nc$habit, length)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical")
colnames
colnames(nc)
inference(y = nc$mage, x = nc$mature, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical")
by(nc$mage, nc$mature, summary)
load(url("http://bit.ly/dasi_gss_ws_cl"))
class(nc$class)
class(gss$class)
hist(gss$class)
hist(gss$wordsum)
boxplot(gss$class)
boxplot(gss$wordsum ~ gss$class)
summary(gss$class)
inference(y = gss$wordsum, x = gss$class, est = "mean", type = "ht", alternative = "greater", method = "theoretical")
hist(gss$wordsum)
barplot(gss$class)
inference(y = gss$wordsum, x = gss$class, est = "mean", type = "ht", alternative = "greater", method = "theoretical")
sqrt(3.4^2/18 + 2.7^2/18)
?pt
pt(2.485,df = 25)
pt(2.485,df = 25, lower.tail = FALSE)
pt(2.485,df = 25, lower.tail = FALSE) * 2
boxplot(nc$gained ~ nc$habit)
boxplot(nc$weight ~ nc$habit)
?log
log(0.3, base=0.5)
28.79*log(0.3, base=0.5)
library(framed)
156 - 1.72 * 44
x <- c(16,25,45,49,64,70,39)
y <- c(109,122,132,199,185,199,143)
xb <- mean(x)
yb <- mean(y)
varx <- var(x)
vary <= var(y)
var_y <= var(y)
vary <- var(y)
sdx <- sd(x)
sdy <- sd(y)
covxy <- cov(x,y)
r <- covxy / (sdx * sdy)
r
r * sdy / sdx
a <- r * sdy / sdx
yb - a * xb
yb
1.72 * 40 + 79.73
1.72 * 82 + 79.73
sqrt(379)
xb
yb
y
(y-yb)^2
sum((y-yb)^2) / 6
sum((x-xb)^2) / 6
sum((x-xb)*(y-yb)) / 6
sdx
sdy
sum((x-xb)*(y-yb)) / 6 * sdx / sdy
sum((x-xb)*(y-yb)) / (6 * sdx * sdy)
sum((x-xb)*(y-yb)) / (6 * sdx * sdy) * (sdy / sdx)
1.723592*40 + 79.7334
1.723592*82 + 79.7334
?exp
ps <- matrix(runif(2*n), ncol=2)
g <- function(x,y) y <= x^2
z <- g(ps[,1], ps[,2])
plot(ps[!z,1], ps[!z,2], col='blue', pch=20)
points(ps[z,1], ps[z,2], col='green', pch=20)
curve(f, 0,1, n=100, col='white', add=TRUE)
n <- 100
ps <- matrix(runif(2*n), ncol=2)
g <- function(x,y) y <= x^2
z <- g(ps[,1], ps[,2])
plot(ps[!z,1], ps[!z,2], col='blue', pch=20)
points(ps[z,1], ps[z,2], col='green', pch=20)
curve(f, 0,1, n=100, col='white', add=TRUE)
n <- 10000
ps <- matrix(runif(2*n), ncol=2)
g <- function(x,y) y <= x^2
z <- g(ps[,1], ps[,2])
plot(ps[!z,1], ps[!z,2], col='blue', pch=20)
points(ps[z,1], ps[z,2], col='green', pch=20)
curve(f, 0,1, n=100, col='white', add=TRUE)
source("http://bit.ly/dasi_inference")
source("http://bit.ly/dasi_inference")
load(url("http://www.openintro.org/stat/data/atheism.RData"))
head(atheism)
head(atheism, 20)
us12 = subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
View(us12)
us12_atheist = subset(us12, us12$response == "atheist")
dim(us12)
dim(us12_atheist)[1]
dim(us12_atheist)[1] / dim(us12)[1]
inference(us12$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
1.645 * 0.0069
qnorm(.975)
0.0069*1.96
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p)
?inference
??inference
spain <- subset(atheism, atheism$nationality == "Spain")
inference(y=spain$response, x=spain$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist")
inference(y=spain$response, x=spain$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided")
us <- subset(atheism, atheism$nationality == "United States")
inference(y=us$response, x=us$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided")
z <- qnorm(0.975)
p <- 0.5
me <- 0.01
n <- ((z * sqrt(p * (1-p))) / me)^2
n
setwd("~/Repositories/Coursera_DataAnalysis_Duke/Project/")
library(reshape2)
library(ggplot2)
library(reshape2)
library(ggplot2)
load(url("http://bit.ly/dasi_gss_data"))
# only keep count of siblings, degree and constant family income
data <- gss[,c("sibs","degree")]
# get statistics
summary(data)
# use median number of siblings
sibs.default <- median(data$sibs, na.rm = TRUE)
data[is.na(data$sibs),"sibs"] <- sibs.default
# use "High School"
degree.default <- "High School"
data[is.na(data$degree),"degree"] <- degree.default
summary(data)
college <- c('Junior College','Bachelor','Graduate')
data[data$degree %in% college]
data[data$degree %in% college,]
data[data$degree %in% college,]$educ <- 'College'
data[data$degree %in% college,"educ"] <- 'College'
data
data[data$degree %notin% college,"educ"] <- 'No college'
data[not(data$degree %in% college),"educ"] <- 'No college'
data[!(data$degree %in% college),"educ"] <- 'No college'
data
summary(data)
data$educ <- as.factor(data$educ)
summary(data)
42119+14942
source("http://bit.ly/dasi_inference")
inference(y = data$sibs, x = data$educ, est = "mean", type = "ci", null = 0, method = "theoretical")
college <- c('Junior College','Bachelor','Graduate')
data[data$degree %in% college,"educ"] <- 'College'
data[!(data$degree %in% college),"educ"] <- 'No College'
data$educ <- as.factor(data$educ)
setwd("~/Repositories/Coursera_DataAnalysis_Duke/Project/")
library(reshape2)
library(ggplot2)
load(url("http://bit.ly/dasi_gss_data"))
# only keep count of siblings, degree and constant family income
data <- gss[,c("sibs","degree")]
# get statistics
summary(data)
# use median number of siblings
sibs.default <- median(data$sibs, na.rm = TRUE)
data[is.na(data$sibs),"sibs"] <- sibs.default
# use "High School"
degree.default <- "High School"
data[is.na(data$degree),"degree"] <- degree.default
data <- data[data$sibs <= 15,]
college <- c('Junior College','Bachelor','Graduate')
data[data$degree %in% college,"educ"] <- 'College'
data[!(data$degree %in% college),"educ"] <- 'No College'
data$educ <- as.factor(data$educ)
# get updated statistics
summary(data)
41818+14894
data_non <- data[data$educ == 'Non College',]
data_non
data$educ == 'No College'
data_non <- data[data$educ == 'Non College',]
data_non.head()
data_noc <- subset(data, data$educ == 'No College')
data_noc.head()
data_noc
head(data_noc)
length(data_noc)
dim(data_noc)[0]
dim(data_noc)
dim(data_noc)[1]
# get a subset of non-college graduates only
data_noc <- subset(data, data$educ == 'No College')
# determine the sample size n, the sample mean xbar and the standard deviation sd
n_noc <- dim(data_noc)[1]
xbar_noc <- mean(data_noc$sibs)
sd_noc <- sd(data_noc$sibs)
# compute the standard error
se_noc <- sqrt(sd_noc / n_noc)
#finally the confidence interval
xbar_noc + c(-1, 1) * qnorm(0.975) * se
n_noc <- dim(data_noc)[1]
xbar_noc <- mean(data_noc$sibs)
sd_noc <- sd(data_noc$sibs)
# compute the standard error
se_noc <- sqrt(sd_noc / n_noc)
#finally the confidence interval
xbar_noc + c(-1, 1) * qnorm(0.975) * se_noc
data_col <- subset(data, data$educ == 'College')
# determine the sample size n, the sample mean xbar and the standard deviation sd
n_col <- dim(data_col)[1]
xbar_col <- mean(data_col$sibs)
sd_col <- sd(data_col$sibs)
# compute the standard error
se_col <- sqrt(sd_col / n_col)
#finally the confidence interval
xbar_col + c(-1, 1) * qnorm(0.975) * se_col
n_noc <- dim(data_noc)[1]
xbar_noc <- mean(data_noc$sibs)
sd_noc <- sd(data_noc$sibs)
# compute the standard error
se_noc <- sd_noc / sqrt(n_noc)
#finally the confidence interval
xbar_noc + c(-1, 1) * qnorm(0.975) * se_noc
n_col <- dim(data_col)[1]
xbar_col <- mean(data_col$sibs)
sd_col <- sd(data_col$sibs)
# compute the standard error
se_col <- sd_col / sqrt(n_col)
#finally the confidence interval
xbar_col + c(-1, 1) * qnorm(0.975) * se_col
se_col_noc <- sqrt(sd_col^2 / n_col + sd_noc^2 / n_noc)
xbar_col_noc <- xbar_col - xbar_noc
xbar_col_noc
?pnorm
z <- (xbar_col_noc - 0) / se_col_noc
pnorm(z, lower.tail = TRUE)
pnorm(z*-1, lower.tail = TRUE)
z
inference(y = data$sibs, x = data$educ, est = "mean", type = "ht", null = 0, alternative = "greater", method = "theoretical")
source("http://bit.ly/dasi_inference")
inference(y = data$sibs, x = data$educ, est = "mean", type = "ht", null = 0, alternative = "greater", method = "theoretical")
?subset
ggplot(data, aes(x=sibs)) +
geom_histogram(binwidth=1, colour="black", fill="white") +
xlab("siblings") +
ggtitle("Distribution of Number of Siblings") +
facet_grid(. ~ educ)
inference(y = data_col$sibs, x = data_col$educ, est = "mean", type = "ci",
null = 0, method = "theoretical")
inference(data_col$sibs, est = "mean", type = "ci", null = 0, method = "theoretical")
inference(data_noc$sibs, est = "mean", type = "ci", null = 0, method = "theoretical")
table(data)
?summary
?table
sumaary(data)
summary(data)
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="onesided")
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="twosided")
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
inference(y = data$sibs, x = data$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
table(data_col)
summary(data_col)
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
data_col2 <- subset(data, data$degree %in% c('Junior College','Bachelor','Graduate'))
summary(data_col2)
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
data_col2$degree <- as.factor(data_col2$degree)
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
data_col2$degree <- factor(data_col2$degree, levels = c('Junior College','Bachelor','Graduate'))
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",
null = 0, method = "theoretical", alternative="greater")
data_col2 <- ddply(.data = data_col, .variables = .(degree), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qdegree <- q$degree
dat
}
)
library(plyr)
data_col2 <- ddply(.data = data_col, .variables = .(degree), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qdegree <- q$degree
dat
})
data_col2
data_ply <- ddply(.data = data_col, .variables = .(degree), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qdegree <- q$degree
dat
}
)
ggplot(data = data_ply, aes(x = qdegree, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(sibs ~ qdegree)
data_ply <- ddply(.data = data_col[data_col$degree %in% c('Graduate'),], .variables = .(degree), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qdegree <- q$degree
dat
})
ggplot(data = data_ply, aes(x = qdegree, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(sibs ~ qdegree)
data_ply <- ddply(.data = data_col, .variables = .(sibs), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qsibs <- q$sibs
dat
})
ggplot(data = data_ply, aes(x = qsibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(sibs ~ degree)
data_ply <- ddply(.data = data_col, .variables = .(sibs), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qsibs <- q$sibs
dat
})
ggplot(data = data_ply, aes(x = qsibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(sibs ~ degree)
head(data_ply)
ggplot(data = data_ply, aes(x = qsibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(. ~ degree)
ggplot(data_col, aes(sample = sibs)) +
stat_qq() +
facet_grid(degree ~ .)
ggplot(data_col, aes(sample = sibs)) +
stat_qq() +
facet_grid(. ~ degree)
ggplot(data_col, aes(sample = sibs)) +
stat_qq() +
geom_smooth(method = "lm", se = FALSE) +
facet_grid(. ~ degree)
data_ply <- ddply(.data = data_col, .variables = .(degree), function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qsibs <- q$sibs
dat
})
ggplot(data = data_ply, aes(x = qsibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(. ~ degree)
head(data_ply)
?ddply
data_ply <- ddply(.data = data_col, .variables = .(degree), .fun = function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$qsibs <- q$sibs
dat
})
head(data_ply)
data_ply <- ddply(.data = data_col, .variables = .(degree), .fun = function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$theo.sibs <- q$sibs
dat
})
head(data_ply)
head(data_col)
q <- qqnorm(data_col$sibs, plot = FALSE)
q
data_ply <- ddply(.data = data_col, .variables = .(degree), .fun = function(dat){
dat$theo.sibs <- qqnorm(dat$sibs, plot = FALSE)
dat
})
head(q)
dim(q)
q$sibs
q <- qqnorm(dat$sibs, plot = FALSE)
q <- qqnorm(data_col$sibs, plot = FALSE)
q$sibs
data_ply <- ddply(.data = data_col, .variables = .(degree), .fun = function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$theo.sibs <- q
dat
})
q[1]
q[2]
??qqnorm
?qqnorm
data_ply <- ddply(.data = data_col, .variables = .(degree), .fun = function(dat){
q <- qqnorm(dat$sibs, plot = FALSE)
dat$theo.sibs <- q$x
dat
})
head(data_ply)
ggplot(data = data_ply, aes(x = theo.sibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
facet_grid(. ~ degree)
ggplot(data = data_ply, aes(x = theo.sibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
ylim=(0, 16) +
facet_grid(. ~ degree)
?ggplot
ggplot(data = data_ply, aes(x = theo.sibs, y = sibs)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Theoretical") +
ylab("Sample") +
ylim(0, 16) +
facet_grid(. ~ degree)
summary(data_col)
data_col$degree <- factor(data_col$degree, levels = c('Junior College','Bachelor','Graduate'))
summary(data_col)
table(data_col)
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",)
)
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",method="theoritical")
inference(y = data_col2$sibs, x = data_col2$degree, est = "mean", type = "ht",method="theoretical")
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",method="theoretical")
inference(y = data_col$sibs, x = data_col$degree, est = "mean", type = "ht",method="theoretical", alternative="greater")
0.05/3
ybar <- mean(data_col$sibs)
ybar
data_col$sibs-ybar
(data_col$sibs-ybar)^2
?lapply
?group
library(data.table)
data.table(data_col)
?aggregate
aggregate(data_col, by = list(degree), FUN=mean)
aggregate(data_col, by = list("degree"), FUN=mean)
aggregate(data_col, by = list(data_col$degree), FUN=mean)
aggregate(data_col$sibs, by = list(data_col$degree), FUN=mean)
means <- aggregate(data_col$sibs, by = list(data_col$degree), FUN=mean)
means[1]
means[1][1]
means[[1]
]
means[[1][1]]
means[colnames(means) <- c("degree","sibs")
s
colnames(means) <- c("degree","sibs")
means
ybar_juc <- means[means$degree == "Junior College", "sibs"]
ybar_juc
y1, y2, y3 <- means[,"sibs"]
summary(data_col)
tbl <- summary(data_col)
tbl
tbl$degree
class(tbl)
means
data.table(data_col)
?ddply
ddply(data_col,.(degree),
summarise)
count(data_col)
count(data_col, c("degree"))
merge(means, counts)
counts <- count(data_col, c("degree"))
merge(means, counts)
stats <- merge(means, counts)
stats$freq * (stats$mean - ybar)^2
colnames(means) <- c("degree","mean")
stats$freq * (stats$mean - ybar)^2
means
stats
means <- aggregate(data_col$sibs, by = list(data_col$degree), FUN=mean)
colnames(means) <- c("degree","mean")
counts <- count(data_col, c("degree"))
stats <- merge(means, counts)
stats
stats$freq * (stats$mean - ybar)^2
ssg <-sum(stats$freq * (stats$mean - ybar)^2)
ssg
dim(data_col)[1]
inference(data_col$sibs, est = "mean", type = "ci", null = 0,
method = "theoretical")
